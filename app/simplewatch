#!/bin/bash
if [[ $1 = "-v" ]]
then
    echo "0.6.0"
    exit 0
fi
source ./config.sh
quality="best\n1080p60\n1080p\n720p60\n720p\n480p\n360p\naudio_only"
oauth="$(cat oauth|tr -d '\n')"
if [[ -z $oauth ]]
then
    echo "ERROR: Missing oauth, use theatron-offline"
    if [[ $clip_capabilities = "true" ]] ;then
	scope="clips:edit"
	auth_url="https://id.twitch.tv/oauth2/authorize?client_id=$client_id&redirect_uri=$redirect_uri&response_type=token&scope=$scope"
	echo "Auth url"
	echo $auth_url
	open "$auth_url"
    fi
    exit 1
fi
smenucheck=$(echo $launcher | awk '{print $1}')
echo $smenucheck
if [[ $smenucheck = "smenu" ]] ;then
    echo "Smenu detected"
    channel=$(curl -s -H 'Accept: application/vnd.twitchtv.v5+json' \
	-H "Client-ID: $client_id" \
	-H "Authorization: OAuth $oauth" \
	-X GET 'https://api.twitch.tv/kraken/streams/followed'\
	| jq -c '.streams[] | {"":.channel | .name}'\
	| tr -d '\{\}\:\"\,'\
	| $launcher)
else
    channel=$(curl -s -H 'Accept: application/vnd.twitchtv.v5+json' \
	-H "Client-ID: $client_id" \
	-H "Authorization: OAuth $oauth" \
	-X GET 'https://api.twitch.tv/kraken/streams/followed'\
	| jq -c '.streams[] | {"":.channel | {"Streamer ": .name , " playing ": .game}, " for ": .viewers, " viewers ": .video_height}'\
	| tr -d '\{\}\:\"\,'\
	| awk '{print $0"p"}'\
	| $launcher)
    not_following=$(echo $channel | awk '{print $2}')
    if [[ -n $not_following ]];then
    channel=$not_following
    fi
if [[ -z $channel ]]
then
    exit 1
fi
if [[ $vod_mode = "true" ]]
    #čšć is used to sanitize output easier, so we don't remove every : but only the json key:value colon
then
    id=$(curl -H 'Accept: application/vnd.twitchtv.v5+json' \
    -H 'Client-ID: fendbm5b5q1c2820m59sbdv9z95vs4' \
    -X GET "https://api.twitch.tv/kraken/users?login=$channel"\
    | jq -c '.users[] | ._id' | tr -d '"' )\
    live=$(curl -H 'Accept: application/vnd.twitchtv.v5+json' \
    -H 'Client-ID: fendbm5b5q1c2820m59sbdv9z95vs4' \
    -X GET "https://api.twitch.tv/kraken/streams/$id"\
    | jq -r '.stream')
    if  [[ $live != "null"* ]]; then
	live="Channel is live, click me to watch"
    else
	live="Channel is not yet live, use polling service and wait :( "
    fi
    echo "$id" > currentBroadcasterId.txt
    video=$(curl -H 'Accept: application/vnd.twitchtv.v5+json' \
	-H 'Client-ID: fendbm5b5q1c2820m59sbdv9z95vs4' \
	-X GET "https://api.twitch.tv/kraken/channels/$id/videos?limit=$vod_mode_limit"\
	| jq -c --unbuffered '.videos[] | {"čšć" : .title, " (čšć": .created_at, ") čšć": .url}'\
	| tr -d '\{\}\"\,' | sed 's/čšć://g' \
	| printf "%s\n%s" "$live" "$(cat -)" | $launcher | awk 'NF>0{print $NF}')
fi
fi
picked_quality="best"
if [[ $always_best = "false" ]];
then
    picked_quality="$(echo -e $quality | $launcher)"
fi
if [[ $popup_chat = "true" || $1 = "-p" ]] ;then
    open https://www.twitch.tv/popout/$channel/chat?popout=
fi
    streamlink https://www.twitch.tv/$channel $picked_quality -p=$player $streamlink_flags
# vim: ft=sh
